//---------------------------------------------------------------------------
#ifndef DataAccessLibConnectH
#define DataAccessLibConnectH
//---------------------------------------------------------------------------
// #include "GlobalExport.h"
#include "DataAccessLibExportConst.h"
#include "DataAccessLibStorageConst.h"
//---------------------------------------------------------------------------
typedef bool	(__stdcall * PHasError)();
typedef bool	(__stdcall * PListErrors)();
typedef bool	(__stdcall * PGetLastErrorStringW)(WCHAR *outStr);
typedef bool	(__stdcall * PGetLastErrorString)(char *outStr);
typedef StorageHandle	(__stdcall * PCreateStorageHandle)(const WCHAR *fileName);
typedef void	(__stdcall * PCloseStorageHandle)(StorageHandle storageHandle);
typedef StorageType	(__stdcall * PGetStorageType)(StorageHandle storageHandle);
typedef PhysicalDriveInfoStruct	(__stdcall * PGetPhysicalDriveInfo)(StorageHandle storageHandle);
typedef int	(__stdcall * PGetNumberOfPartitions)(StorageHandle storageHandle);
typedef bool	(__stdcall * PGetPartitionInfoByNumber)(StorageHandle storageHandle, unsigned int selectedNumber, PartitionInfoStruct *outPartitionInfo);
typedef DWORD	(__stdcall * PGetStorageBlockSize)(StorageHandle storageHandle);
typedef bool	(__stdcall * PSetStorageBlockSize)(StorageHandle storageHandle, DWORD blockSize);
typedef StorageIteratorHandle	(__stdcall * PGetStorageIterator)(StorageHandle storageHandle);
typedef void	(__stdcall * PStorageBlockFirst)(StorageIteratorHandle storageIteratorHandle);
typedef void	(__stdcall * PStorageBlockNext)(StorageIteratorHandle storageIteratorHandle);
typedef bool	(__stdcall * PStorageBlockIsDone)(StorageIteratorHandle storageIteratorHandle);
typedef void	(__stdcall * PCloseStorageIterator)(StorageIteratorHandle storageIteratorHandle);
typedef LONGLONG (__stdcall * PGetStoragePosition)(StorageHandle storageHandle);
typedef bool	(__stdcall * PSetStoragePosition)(StorageHandle storageHandle, LONGLONG newPosition, OriginEnum newOrigin);
typedef LONGLONG	(__stdcall * PReadStorageData)(StorageHandle storageHandle, LONGLONG bytesToRead, BYTE *dataBuffer);
typedef FileSystemTypeEnum	(__stdcall * PRecognizeFileSystem)(StorageHandle storageHandle, ULONGLONG startOffset);
typedef FileSystemHandle	(__stdcall * PCreateFileSystemHandle)(FileSystemTypeEnum fsType, StorageHandle storageHandle, ULONGLONG startOffset, ULONGLONG diskSize, WORD sectorSize);
typedef FileSystemHandle	(__stdcall * PFastCreateFileSystemHandle)(const WCHAR *fileName, ULONGLONG startOffset);
typedef void	(__stdcall * PCloseFileSystemHandle)(FileSystemHandle fileSystemHandle);
typedef FileSystemTypeEnum	(__stdcall * PGetFileSystemType)(FileSystemHandle fileSystemHandle);
typedef int	(__stdcall * PGetFileSystemTypeStringW)(FileSystemHandle fileSystemHandle, WCHAR *outType);
typedef int	(__stdcall * PGetFileSystemTypeString)(FileSystemHandle fileSystemHandle, char *outType);
typedef ULONGLONG	(__stdcall * PGetNumberOfClusters)(FileSystemHandle fileSystemHandle);
typedef ULONGLONG	(__stdcall * PGetFileSystemSize)(FileSystemHandle fileSystemHandle);
typedef ULONGLONG (__stdcall * PGetUsedSpaceSize)(FileSystemHandle fileSystemHandle);
typedef DWORD	(__stdcall * PGetFileSystemClusterSize)(FileSystemHandle fileSystemHandle);
typedef int (__stdcall * PGetVolumeLabel)(FileSystemHandle fileSystemHandle, char *outLabel);
typedef int (__stdcall * PGetVolumeLabelW)(FileSystemHandle fileSystemHandle, WCHAR *outLabel);
typedef int (__stdcall * PGetVolumeSerial)(FileSystemHandle fileSystemHandle, char *outSerial);
typedef int (__stdcall * PGetVolumeSerialW)(FileSystemHandle fileSystemHandle, WCHAR *outSerial);
typedef VolumeInfoStruct (__stdcall * PGetVolumeInfo)(FileSystemHandle fileSystemHandle);
typedef ClusterIteratorHandle	(__stdcall * PGetClusterIterator)(FileSystemHandle fileSystemHandle);
typedef void	(__stdcall * PClusterFirst)(ClusterIteratorHandle clusterIteratorHandle);
typedef void	(__stdcall * PClusterNext)(ClusterIteratorHandle clusterIteratorHandle);
typedef bool	(__stdcall * PClusterIsDone)(ClusterIteratorHandle clusterIteratorHandle);
typedef bool	(__stdcall * PClusterIsUsed)(ClusterIteratorHandle clusterIteratorHandle);
typedef LONGLONG	(__stdcall * PGetCurrentCluster)(ClusterIteratorHandle clusterIteratorHandle, BYTE *dataBuffer);
typedef void	(__stdcall * PCloseClusterIterator)(ClusterIteratorHandle clusterIteratorHandle);
typedef bool	(__stdcall * PSetFileSystemPosition)(FileSystemHandle fileSystemHandle, LONGLONG newPosition, OriginEnum newOrigin);
typedef LONGLONG	(__stdcall * PReadFileSystemData)(FileSystemHandle fileSystemHandle, ULONGLONG bytesToRead, BYTE *dataBuffer);
typedef LONGLONG	(__stdcall * PReadClustersByNumber)(FileSystemHandle fileSystemHandle, ULONGLONG clusterId, DWORD numberOfClusters, BYTE *dataBuffer, const DWORD bufferSize);
typedef FileHandle	(__stdcall * PCreateFileHandle)(FileSystemHandle fileSystemHandle, const WCHAR *fullPath);
typedef FileHandle	(__stdcall * PCreateFileHandleByRecordId)(FileSystemHandle fileSystemHandle, ULONGLONG recordId);
typedef LONGLONG	(__stdcall * PGetFileRecordId)(FileHandle fileHandle);
typedef int	(__stdcall * PFileGetNameW)(FileHandle fileHandle, WCHAR *outFileName);
typedef int	(__stdcall * PFileGetPathW)(FileHandle fileHandle, WCHAR *outFilePath);
typedef int	(__stdcall * PFileGetFullPathW)(FileHandle fileHandle, WCHAR *outFullPath);
typedef bool	(__stdcall * PFileIsDir)(FileHandle fileHandle);
typedef bool	(__stdcall * PFileIsLink)(FileHandle fileHandle);
typedef int (__stdcall * PGetLinkTargetW)(FileHandle fileHandle, WCHAR *outFullPath);
typedef int	(__stdcall * PGetNumberOfStreams)(FileHandle fileHandle);
typedef int	(__stdcall * PGetNumberOfFiles)(FileHandle fileHandle);
typedef LONGLONG	(__stdcall * PGetFileDataSize)(FileHandle fileHandle, int streamIndex);
typedef ULONGLONG	(__stdcall * PGetTimeFileCreate)(FileHandle fileHandle, char *outBuffer, bool localTime, long utcBias);
typedef ULONGLONG	(__stdcall * PGetTimeFileModify)(FileHandle fileHandle, char *outBuffer, bool localTime, long utcBias);
typedef ULONGLONG	(__stdcall * PGetTimeFileAccess)(FileHandle fileHandle, char *outBuffer, bool localTime, long utcBias);
typedef ULONGLONG	(__stdcall * PGetTimeFileRecordModify)(FileHandle fileHandle, char *outBuffer, bool localTime, long utcBias);
typedef bool	(__stdcall * PGetFileStdAttributes)(FileHandle fileHandle, char *outBuffer);
typedef bool(__stdcall * PGetFileHash)(FileHandle fileHandle, int streamIndex, unsigned int *outBuffer);
typedef int	(__stdcall * PRecognizeFileCustomSignature)(FileHandle fileHandle, int streamIndex, WCHAR *outName);
typedef bool	(__stdcall * PSaveFile)(FileHandle fileHandle, int streamIndex, const WCHAR *outFilePath);
typedef bool	(__stdcall * PSaveFileWithPath)(FileHandle fileHandle, const WCHAR *outPath);
typedef bool	(__stdcall * PSetFilePosition)(FileHandle fileHandle, int newStreamIndex, LONGLONG newPosition, OriginEnum newOrigin);
typedef LONGLONG	(__stdcall * PReadFileData)(FileHandle fileHandle, LONGLONG bytesToRead, BYTE *dataBuffer);
typedef void	(__stdcall * PCloseFileHandle)(FileHandle fileHandle);
typedef DirectoryIteratorHandle	(__stdcall * PCreateDirectoryIteratorHandle)(FileHandle fileHandle);
typedef DirectoryIteratorHandle	(__stdcall * PCreateFileSystemLinearIteratorHandle)(FileSystemHandle fileSystemHandle, DirectoryIteratorMode mode);
typedef DirectoryIteratorHandle	(__stdcall * PCreateFileSystemMaskIteratorHandle)(FileSystemHandle fileSystemHandle, const WCHAR *fileMask, DirectoryIteratorMode mode);
typedef void	(__stdcall * PDirFirst)(DirectoryIteratorHandle dirHandle);
typedef void	(__stdcall * PDirNext)(DirectoryIteratorHandle dirHandle);
typedef bool	(__stdcall * PDirIsDone)(DirectoryIteratorHandle dirHandle);
typedef bool	(__stdcall * PDirFileIsDir)(DirectoryIteratorHandle dirHandle);
typedef bool	(__stdcall * PDirFileIsLink)(DirectoryIteratorHandle dirHandle);
typedef int	(__stdcall * PGetFileNameW)(DirectoryIteratorHandle dirHandle, WCHAR *outFileName);
typedef int	(__stdcall * PGetFilePathW)(DirectoryIteratorHandle dirHandle, WCHAR *outFilePath);
typedef int	(__stdcall * PGetFullPathW)(DirectoryIteratorHandle dirHandle, WCHAR *outFullPath);
typedef FileHandle	(__stdcall * PGetCurrentFile)(DirectoryIteratorHandle dirHandle);
typedef void	(__stdcall * PCloseDirectoryIterator)(DirectoryIteratorHandle dirHandle);
typedef int	(__stdcall * PRecognizeBufferCustomSignature)(const BYTE *dataBuffer, unsigned int bufferSize, WCHAR *outName);
typedef bool	(__stdcall * PWriteDataToFileW)(const BYTE *dataBuffer, ULONGLONG dataSize, const WCHAR *fileName, bool appendFile);
//---------------------------------------------------------------------------
extern PHasError		HasError;
extern PListErrors	ListErrors;
extern PGetLastErrorStringW		GetLastErrorStringW;
extern PGetLastErrorString		GetLastErrorString;
extern PCreateStorageHandle		CreateStorageHandle;
extern PCloseStorageHandle		CloseStorageHandle;
extern PGetStorageType		GetStorageType;
extern PGetPhysicalDriveInfo		GetPhysicalDriveInfo;
extern PGetNumberOfPartitions		GetNumberOfPartitions;
extern PGetPartitionInfoByNumber		GetPartitionInfoByNumber;
extern PGetStorageBlockSize		GetStorageBlockSize;
extern PSetStorageBlockSize		SetStorageBlockSize;
extern PGetStorageIterator		GetStorageIterator;
extern PStorageBlockFirst		StorageBlockFirst;
extern PStorageBlockNext		StorageBlockNext;
extern PStorageBlockIsDone		StorageBlockIsDone;
extern PCloseStorageIterator		CloseStorageIterator;
extern PGetStoragePosition		GetStoragePosition;
extern PSetStoragePosition		SetStoragePosition;
extern PReadStorageData		ReadStorageData;
extern PRecognizeFileSystem		RecognizeFileSystem;
extern PCreateFileSystemHandle		CreateFileSystemHandle;
extern PFastCreateFileSystemHandle		FastCreateFileSystemHandle;
extern PCloseFileSystemHandle		CloseFileSystemHandle;
extern PGetFileSystemType		GetFileSystemType;
extern PGetFileSystemTypeStringW		GetFileSystemTypeStringW;
extern PGetFileSystemTypeString		GetFileSystemTypeString;
extern PGetNumberOfClusters		GetNumberOfClusters;
extern PGetFileSystemSize		GetFileSystemSize;
extern PGetUsedSpaceSize		GetUsedSpaceSize;
extern PGetFileSystemClusterSize		GetFileSystemClusterSize;
extern PGetVolumeLabel		GetVolumeLabel;
extern PGetVolumeLabelW		GetVolumeLabelW;
extern PGetVolumeSerial	GetVolumeSerial;
extern PGetVolumeSerialW		GetVolumeSerialW;
extern PGetVolumeInfo		GetVolumeInfo;
extern PGetClusterIterator		GetClusterIterator;
extern PClusterFirst		ClusterFirst;
extern PClusterNext		ClusterNext;
extern PClusterIsDone		ClusterIsDone;
extern PClusterIsUsed		ClusterIsUsed;
extern PGetCurrentCluster		GetCurrentCluster;
extern PCloseClusterIterator		CloseClusterIterator;
extern PSetFileSystemPosition		SetFileSystemPosition;
extern PReadFileSystemData		ReadFileSystemData;
extern PReadClustersByNumber		ReadClustersByNumber;
extern PCreateFileHandle		CreateFileHandle;
extern PCreateFileHandleByRecordId		CreateFileHandleByRecordId;
extern PFileIsDir		FileIsDir;
extern PFileIsLink		FileIsLink;
extern PGetLinkTargetW GetLinkTargetW;
extern PGetNumberOfStreams		GetNumberOfStreams;
extern PGetNumberOfFiles		GetNumberOfFiles;
extern PGetFileDataSize		GetFileDataSize;
extern PGetTimeFileCreate		GetTimeFileCreate;
extern PGetTimeFileModify		GetTimeFileModify;
extern PGetTimeFileAccess		GetTimeFileAccess;
extern PGetTimeFileRecordModify		GetTimeFileRecordModify;
extern PGetFileStdAttributes		GetFileStdAttributes;
extern PGetFileHash GetFileHash;
extern PFileGetNameW FileGetNameW;
extern PFileGetPathW FileGetPathW;
extern PFileGetFullPathW FileGetFullPathW;
extern PRecognizeFileCustomSignature		RecognizeFileCustomSignature;
extern PSaveFile		SaveFile;
extern PSaveFileWithPath		SaveFileWithPath;
extern PSetFilePosition		SetFilePosition;
extern PReadFileData		ReadFileData;
extern PCloseFileHandle		CloseFileHandle;
extern PCreateDirectoryIteratorHandle		CreateDirectoryIteratorHandle;
extern PCreateFileSystemLinearIteratorHandle		CreateFileSystemLinearIteratorHandle;
extern PCreateFileSystemMaskIteratorHandle			CreateFileSystemMaskIteratorHandle;
extern PDirFirst		DirFirst;
extern PDirNext		DirNext;
extern PDirIsDone		DirIsDone;
extern PDirFileIsDir		DirFileIsDir;
extern PDirFileIsLink		DirFileIsLink;
extern PGetFileNameW		GetFileNameW;
extern PGetFilePathW		GetFilePathW;
extern PGetFullPathW		GetFullPathW;
extern PGetCurrentFile	GetCurrentFile;
extern PCloseDirectoryIterator		CloseDirectoryIterator;
extern PRecognizeBufferCustomSignature		RecognizeBufferCustomSignature;
extern PWriteDataToFileW WriteDataToFileW;
//---------------------------------------------------------------------------
bool __fastcall DataAccessLibInit();
void __fastcall DataAccessLibCleanup();
//---------------------------------------------------------------------------
#endif
